
ATMEGA2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000025c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000448  00800200  00800200  0000025c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000028c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012c1  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d46  00000000  00000000  00001615  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005c4  00000000  00000000  0000235b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000d8  00000000  00000000  00002920  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009fc  00000000  00000000  000029f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000252  00000000  00000000  000033f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00003646  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	af c0       	rjmp	.+350    	; 0x1c4 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 ee       	ldi	r30, 0xE8	; 232
  fc:	f1 e0       	ldi	r31, 0x01	; 1
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	26 e0       	ldi	r18, 0x06	; 6
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a8 34       	cpi	r26, 0x48	; 72
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	61 c0       	rjmp	.+194    	; 0x1e4 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
void delay(int t);
uint8_t a = 11/7;
uint8_t b;
int main()
{
	sei();
 124:	78 94       	sei
	uint8_t brightness = 0;
	DDRB |= (1<<5);
 126:	84 b1       	in	r24, 0x04	; 4
 128:	80 62       	ori	r24, 0x20	; 32
 12a:	84 b9       	out	0x04, r24	; 4
// 	TCCR1A |= (1<<WGM10)| (1<<WGM11)| (1<<COM1A1);
// 	TCCR1B |= (1<<CS10);
	Timer_init(timer1,noPrescale,FastPWM_TM,COMODE2_A);
 12c:	22 e0       	ldi	r18, 0x02	; 2
 12e:	43 e0       	ldi	r20, 0x03	; 3
 130:	61 e0       	ldi	r22, 0x01	; 1
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0c d0       	rcall	.+24     	; 0x14e <Timer_init>
	Timer_InterruptEnableMask(timer1,Disable,Disable,Disable);
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	40 e0       	ldi	r20, 0x00	; 0
 13a:	60 e0       	ldi	r22, 0x00	; 0
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	2c d0       	rcall	.+88     	; 0x198 <Timer_InterruptEnableMask>
// 			_delay_ms(10); 
// 		/*	brightness--;*/
// 		}
// 		OCR1A = 0;
		/*_delay_ms(1000);*/
		OCR1A = 1;
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 148:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 14c:	f9 cf       	rjmp	.-14     	; 0x140 <main+0x1c>

0000014e <Timer_init>:
#include "Timer.h"
void Timer_init(uint8_t timerNo,uint8_t clockSB,uint8_t waveformGM,uint8_t compareOM)
{
	switch(timerNo)
 14e:	88 23       	and	r24, r24
 150:	19 f0       	breq	.+6      	; 0x158 <Timer_init+0xa>
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	79 f0       	breq	.+30     	; 0x174 <Timer_init+0x26>
 156:	08 95       	ret
	{
		case 0:
		TCCR0B |= (uint8_t)clockSB;
 158:	85 b5       	in	r24, 0x25	; 37
 15a:	68 2b       	or	r22, r24
 15c:	65 bd       	out	0x25, r22	; 37
		TCCR0A |= (uint8_t)waveformGM;
 15e:	84 b5       	in	r24, 0x24	; 36
 160:	48 2b       	or	r20, r24
 162:	44 bd       	out	0x24, r20	; 36
		TCCR0A |= (((uint8_t)compareOM)<<6);
 164:	84 b5       	in	r24, 0x24	; 36
 166:	90 e4       	ldi	r25, 0x40	; 64
 168:	29 9f       	mul	r18, r25
 16a:	90 01       	movw	r18, r0
 16c:	11 24       	eor	r1, r1
 16e:	28 2b       	or	r18, r24
 170:	24 bd       	out	0x24, r18	; 36
		break;
 172:	08 95       	ret
		case 1:
		TCCR1B |= (uint8_t)clockSB;
 174:	e1 e8       	ldi	r30, 0x81	; 129
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	68 2b       	or	r22, r24
 17c:	60 83       	st	Z, r22
		TCCR1A |= (uint8_t)waveformGM;
 17e:	e0 e8       	ldi	r30, 0x80	; 128
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	48 2b       	or	r20, r24
 186:	40 83       	st	Z, r20
		TCCR1A |= (((uint8_t)compareOM)<<6);		
 188:	80 81       	ld	r24, Z
 18a:	90 e4       	ldi	r25, 0x40	; 64
 18c:	29 9f       	mul	r18, r25
 18e:	90 01       	movw	r18, r0
 190:	11 24       	eor	r1, r1
 192:	28 2b       	or	r18, r24
 194:	20 83       	st	Z, r18
 196:	08 95       	ret

00000198 <Timer_InterruptEnableMask>:
		break;
	}
}
void Timer_InterruptEnableMask(uint8_t timerNo,uint8_t OCIE_A,uint8_t OCIE_B,uint8_t TOCIE)
{
	switch(timerNo)
 198:	81 11       	cpse	r24, r1
 19a:	13 c0       	rjmp	.+38     	; 0x1c2 <Timer_InterruptEnableMask+0x2a>
	{
		case 0:
		TIMSK0 |= ((uint8_t)OCIE_A<<1);
 19c:	ee e6       	ldi	r30, 0x6E	; 110
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	70 e0       	ldi	r23, 0x00	; 0
 1a4:	66 0f       	add	r22, r22
 1a6:	77 1f       	adc	r23, r23
 1a8:	68 2b       	or	r22, r24
 1aa:	60 83       	st	Z, r22
		TIMSK0 |= ((uint8_t)OCIE_B<<2);
 1ac:	80 81       	ld	r24, Z
 1ae:	50 e0       	ldi	r21, 0x00	; 0
 1b0:	44 0f       	add	r20, r20
 1b2:	55 1f       	adc	r21, r21
 1b4:	44 0f       	add	r20, r20
 1b6:	55 1f       	adc	r21, r21
 1b8:	48 2b       	or	r20, r24
 1ba:	40 83       	st	Z, r20
		TIMSK0 |= (uint8_t)TOCIE;
 1bc:	80 81       	ld	r24, Z
 1be:	28 2b       	or	r18, r24
 1c0:	20 83       	st	Z, r18
 1c2:	08 95       	ret

000001c4 <__vector_25>:
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	8f 93       	push	r24
 1d0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 1d4:	80 93 47 06 	sts	0x0647, r24	; 0x800647 <Usart0+0x111>
 1d8:	8f 91       	pop	r24
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <_exit>:
 1e4:	f8 94       	cli

000001e6 <__stop_program>:
 1e6:	ff cf       	rjmp	.-2      	; 0x1e6 <__stop_program>
